apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
  namespace: devopschallenge
  labels:
    app: postgres
spec:
  serviceName: postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      initContainers:
        - name: init-permissions
          image: postgres:17
          securityContext:
            runAsUser: 0
          command: ["sh","-c","mkdir -p /var/lib/postgresql/data/pgdata && chown -R 999:999 /var/lib/postgresql/data"]
          volumeMounts:
            - name: pgdata2
              mountPath: /var/lib/postgresql/data
      securityContext:
        fsGroup: 999
      volumes:
        - name: init-sql
          configMap:
            name: pg-init-sql
      containers:
        - name: postgres
          image: postgres:17
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_DB
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgres-secret
                  key: POSTGRES_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          livenessProbe:
            exec:
              command: ["sh","-c","pg_isready -h 127.0.0.1 -p 5432"]
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command: ["sh","-c","pg_isready -h 127.0.0.1 -p 5432"]
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 5
          volumeMounts:
            - name: pgdata2
              mountPath: /var/lib/postgresql/data
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
  volumeClaimTemplates:
    - metadata:
        name: pgdata2
        labels:
          app: postgres
      spec:
        accessModes: ["ReadWriteOnce"]
        storageClassName: hostpath
        resources:
          requests:
            storage: 5Gi
